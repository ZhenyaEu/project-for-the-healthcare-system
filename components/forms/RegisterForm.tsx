"use client";

import { zodResolver } from "@hookform/resolvers/zod";
import Image from "next/image";
import { useRouter } from "next/navigation";
import { useState } from "react";
import { useForm } from "react-hook-form";
import { z } from "zod";

import { Form, FormControl } from "@/components/ui/form";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { SelectItem } from "@/components/ui/select";
import {
  Doctors,
  GenderOptions,
  IdentificationTypes,
  PatientFormDefaultValues,
} from "@/constants";
import { registerPatient } from "@/lib/actions/patient.actions";
import { PatientFormValidation } from "@/lib/validation";

import "react-datepicker/dist/react-datepicker.css";
import "react-phone-number-input/style.css";
import CustomFormField, { FormFieldType } from "../CustomFormField";
import { FileUploader } from "../FileUploader";
import SubmitButton from "../SubmitButton";

const RegisterForm = ({ user }: { user: User }) => {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);

  const form = useForm<z.infer<typeof PatientFormValidation>>({
    resolver: zodResolver(PatientFormValidation),
    defaultValues: {
      ...PatientFormDefaultValues,
      name: user.name,
      email: user.email,
      phone: user.phone,
    },
  });

  const onSubmit = async (values: z.infer<typeof PatientFormValidation>) => {
    setIsLoading(true);

    // Store file info in form data as
    let formData;
    if (
      values.identificationDocument &&
      values.identificationDocument?.length > 0
    ) {
      const blobFile = new Blob([values.identificationDocument[0]], {
        type: values.identificationDocument[0].type,
      });

      formData = new FormData();
      formData.append("blobFile", blobFile);
      formData.append("fileName", values.identificationDocument[0].name);
    }

    try {
      const patient = {
        userId: user.$id,
        name: values.name,
        email: values.email,
        phone: values.phone,
        birthDate: new Date(values.birthDate),
        gender: values.gender,
        address: values.address,
        occupation: values.occupation,
        emergencyContactName: values.emergencyContactName,
        emergencyContactNumber: values.emergencyContactNumber,
        primaryPhysician: values.primaryPhysician,
        insuranceProvider: values.insuranceProvider,
        insurancePolicyNumber: values.insurancePolicyNumber,
        allergies: values.allergies,
        currentMedication: values.currentMedication,
        familyMedicalHistory: values.familyMedicalHistory,
        pastMedicalHistory: values.pastMedicalHistory,
        identificationType: values.identificationType,
        identificationNumber: values.identificationNumber,
        identificationDocument: values.identificationDocument
          ? formData
          : undefined,
        privacyConsent: values.privacyConsent,
      };

      const newPatient = await registerPatient(patient);

      if (newPatient) {
        router.push(`/patients/${user.$id}/new-appointment`);
      }
    } catch (error) {
      console.log(error);
    }

    setIsLoading(false);
  };

  return (
    <Form {...form}>
      <form
        onSubmit={form.handleSubmit(onSubmit)}
        className="flex-1 space-y-12"
      >
        <section className="space-y-4">
          <h1 className="header">–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ üëã</h1>
          <p className="text-dark-700">–†–æ–∑–∫–∞–∂—ñ—Ç—å —Ç—Ä–æ—Ö–∏ –±—ñ–ª—å—à–µ –ø—Ä–æ —Å–µ–±–µ</p>
        </section>

        <section className="space-y-6">
          <div className="mb-9 space-y-1">
            <h2 className="sub-header">–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
          </div>

          {/* NAME */}

          <CustomFormField
            fieldType={FormFieldType.INPUT}
            control={form.control}
            name="name"
            placeholder="–†–æ–∫—Å–æ–ª–∞–Ω–∞ –ö–æ–≤–∞–ª–µ–Ω–∫–æ"
            iconSrc="/assets/icons/user.svg"
            iconAlt="user"
          />

          {/* EMAIL & PHONE */}
          <div className="flex flex-col gap-6 xl:flex-row">
            <CustomFormField
              fieldType={FormFieldType.INPUT}
              control={form.control}
              name="email"
              label="Email address"
              placeholder="rokskov@gmail.com"
              iconSrc="/assets/icons/email.svg"
              iconAlt="email"
            />

            <CustomFormField
              fieldType={FormFieldType.PHONE_INPUT}
              control={form.control}
              name="phone"
              label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
              placeholder="(000) 123-4567"
            />
          </div>

          {/* BirthDate & Gender */}
          <div className="flex flex-col gap-6 xl:flex-row">
            <CustomFormField
              fieldType={FormFieldType.DATE_PICKER}
              control={form.control}
              name="birthDate"
              label="–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è"
            />

            <CustomFormField
              fieldType={FormFieldType.SKELETON}
              control={form.control}
              name="gender"
              label="–°—Ç–∞—Ç—å"
              renderSkeleton={(field) => (
                <FormControl>
                  <RadioGroup
                    className="flex h-11 gap-6 xl:justify-between"
                    onValueChange={field.onChange}
                    defaultValue={field.value}
                  >
                    {GenderOptions.map((option, i) => (
                      <div key={option + i} className="radio-group">
                        <RadioGroupItem value={option} id={option} />
                        <Label htmlFor={option} className="cursor-pointer">
                          {option}
                        </Label>
                      </div>
                    ))}
                  </RadioGroup>
                </FormControl>
              )}
            />
          </div>

          {/* Address & Occupation */}
          <div className="flex flex-col gap-6 xl:flex-row">
            <CustomFormField
              fieldType={FormFieldType.INPUT}
              control={form.control}
              name="address"
              label="–ê–¥—Ä–µ—Å–∞"
              placeholder="–º.–ö–∏—ó–≤, –≤—É–ª. –®–µ–≤—á–µ–Ω–∫–∞, 4"
            />

            <CustomFormField
              fieldType={FormFieldType.INPUT}
              control={form.control}
              name="occupation"
              label="–ü—Ä–æ—Ñ–µ—Å—ñ—è"
              placeholder="–í—á–∏—Ç–µ–ª—å"
            />
          </div>

          {/* Emergency Contact Name & Emergency Contact Number */}
          <div className="flex flex-col gap-6 xl:flex-row">
            <CustomFormField
              fieldType={FormFieldType.INPUT}
              control={form.control}
              name="emergencyContactName"
              label="–Ü–º'—è –¥–æ–≤—ñ—Ä–µ–Ω–æ—ó –æ—Å–æ–±–∏"
              placeholder="–Ü–º'—è"
            />

            <CustomFormField
              fieldType={FormFieldType.PHONE_INPUT}
              control={form.control}
              name="emergencyContactNumber"
              label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–æ–≤—ñ—Ä–µ–Ω–æ—ó –æ—Å–æ–±–∏"
              placeholder="(000) 123-4567"
            />
          </div>
        </section>

        <section className="space-y-6">
          <div className="mb-9 space-y-1">
            <h2 className="sub-header">–ú–µ–¥–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
          </div>

          {/* PRIMARY CARE PHYSICIAN */}
          <CustomFormField
            fieldType={FormFieldType.SELECT}
            control={form.control}
            name="primaryPhysician"
            label="–õ—ñ–∫–∞—Ä –ø–µ—Ä–≤–∏–Ω–Ω–æ—ó –º–µ–¥–∏—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏"
            placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è"
          >
            {Doctors.map((doctor, i) => (
              <SelectItem key={doctor.name + i} value={doctor.name}>
                <div className="flex cursor-pointer items-center gap-2">
                  <Image
                    src={doctor.image}
                    width={32}
                    height={32}
                    alt="doctor"
                    className="rounded-full border border-dark-500"
                  />
                  <p>{doctor.name}</p>
                </div>
              </SelectItem>
            ))}
          </CustomFormField>

          {/* INSURANCE & POLICY NUMBER */}
          <div className="flex flex-col gap-6 xl:flex-row">
            <CustomFormField
              fieldType={FormFieldType.INPUT}
              control={form.control}
              name="insuranceProvider"
              label="–°—Ç—Ä–∞—Ö–æ–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—è"
              placeholder="–ù–∞–∑–≤–∞ —Å—Ç—Ä–∞—Ö–æ–≤–æ—ó –∫–æ–º–ø–∞–Ω—ñ—ó"
            />

            <CustomFormField
              fieldType={FormFieldType.INPUT}
              control={form.control}
              name="insurancePolicyNumber"
              label="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞—Ö–æ–≤–æ–≥–æ –ø–æ–ª—ñ—Å—É"
              placeholder="ABC123456789"
            />
          </div>

          {/* ALLERGY & CURRENT MEDICATIONS */}
          <div className="flex flex-col gap-6 xl:flex-row">
            <CustomFormField
              fieldType={FormFieldType.TEXTAREA}
              control={form.control}
              name="allergies"
              label="–ê–ª–µ—Ä–≥—ñ—è (—è–∫—à–æ —î)"
              placeholder="–ü–∏–ª–æ–∫, –ø–µ–Ω—ñ—Ü–∏–ª—ñ–Ω, —Ä–∏–±–∞"
            />

            <CustomFormField
              fieldType={FormFieldType.TEXTAREA}
              control={form.control}
              name="currentMedication"
              label="–ü–æ—Ç–æ—á–Ω—ñ –ª—ñ–∫–∏"
              placeholder="–Ü–±—É–ø—Ä–æ—Ñ–µ–Ω 200mg, –§—É—Ñ–ª–æ–º—ñ—Ü–∏–Ω 50mcg"
            />
          </div>

          {/* FAMILY MEDICATION & PAST MEDICATIONS */}
          <div className="flex flex-col gap-6 xl:flex-row">
            <CustomFormField
              fieldType={FormFieldType.TEXTAREA}
              control={form.control}
              name="familyMedicalHistory"
              label=" –Ü—Å—Ç–æ—Ä—ñ—è —Ö–≤–æ—Ä–æ–±–∏ —á–ª–µ–Ω—ñ–≤ —Å—ñ–º'—ó (—è–∫—â–æ –º–∞—î —Å–µ–Ω—Å)"
              placeholder="–ë–∞—Ç—å–∫–æ –º–∞—î –≥—ñ–ø–µ—Ä—Ç–æ–Ω—ñ—é"
            />

            <CustomFormField
              fieldType={FormFieldType.TEXTAREA}
              control={form.control}
              name="pastMedicalHistory"
              label="–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω—ñ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω–Ω—è"
              placeholder="–ê–ø–µ–Ω–¥–µ—Ü–∏—Ç in 2015, –ê—Å–º–∞ –≤ –¥–∏—Ç–∏–Ω—Å—Ç–≤—ñ"
            />
          </div>
        </section>

        <section className="space-y-6">
          <div className="mb-9 space-y-1">
            <h2 className="sub-header">–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —Ç–∞ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è</h2>
          </div>

          <CustomFormField
            fieldType={FormFieldType.SELECT}
            control={form.control}
            name="identificationType"
            label="–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç—É, —â–æ –ø–æ—Å–≤—ñ–¥—á—É—î –æ—Å–æ–±—É"
            placeholder="–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó"
          >
            {IdentificationTypes.map((type, i) => (
              <SelectItem key={type + i} value={type}>
                {type}
              </SelectItem>
            ))}
          </CustomFormField>

          <CustomFormField
            fieldType={FormFieldType.INPUT}
            control={form.control}
            name="identificationNumber"
            label="–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø–æ–¥–∞—Ç–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä"
            placeholder="123456789"
          />

          <CustomFormField
            fieldType={FormFieldType.SKELETON}
            control={form.control}
            name="identificationDocument"
            label="–°–∫–∞–Ω–æ–≤–∞–Ω–∞ –∫–æ–ø—ñ—è –¥–æ–∫—É–º–µ–Ω—Ç—É, —â–æ –ø–æ—Å–≤—ñ–¥—á—É—î –æ—Å–æ–±—É"
            renderSkeleton={(field) => (
              <FormControl>
                <FileUploader files={field.value} onChange={field.onChange} />
              </FormControl>
            )}
          />
        </section>

        <section className="space-y-6">
          <div className="mb-9 space-y-1">
            <h2 className="sub-header">
              –ó–≥–æ–¥–∞ –Ω–∞ –æ–±—Ä–æ–±–∫—É –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–∏—Ö –¥–∞–Ω–∏—Ö
            </h2>
          </div>

          <CustomFormField
            fieldType={FormFieldType.CHECKBOX}
            control={form.control}
            name="treatmentConsent"
            label="–Ø –¥–∞—é –∑–≥–æ–¥—É –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ª—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞ —Å—Ç–∞–Ω–æ–º –º–æ–≥–æ –∑–¥–æ—Ä–æ–≤'—è."
          />

          <CustomFormField
            fieldType={FormFieldType.CHECKBOX}
            control={form.control}
            name="disclosureConsent"
            label="–Ø –¥–∞—é –∑–≥–æ–¥—É –Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–∞ —Ä–æ–∑–≥–æ–ª–æ—à–µ–Ω–Ω—è –º–æ—î—ó –º–µ–¥–∏—á–Ω–æ—ó
            –∑ –º–µ—Ç–æ—é –ª—ñ–∫—É–≤–∞–Ω–Ω—è."
          />

          <CustomFormField
            fieldType={FormFieldType.CHECKBOX}
            control={form.control}
            name="privacyConsent"
            label="–Ø –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é, —â–æ –æ–∑–Ω–∞–π–æ–º–∏–≤—Å—è —Ç–∞ –ø–æ–≥–æ–¥–∂—É—é—Å—è –∑
            –ø–æ–ª—ñ—Ç–∏–∫—É –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ."
          />
        </section>

        <SubmitButton isLoading={isLoading}>
          –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–∞ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏
        </SubmitButton>
      </form>
    </Form>
  );
};

export default RegisterForm;
